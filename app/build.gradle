apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.protobuf'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'witness'
apply plugin: 'org.jlleitschuh.gradle.ktlint'
apply from: 'translations.gradle'
apply from: 'witness-verifications.gradle'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'app.cash.exhaustive'

repositories {
    maven {
        url "https://raw.github.com/signalapp/maven/master/photoview/releases/"
        content {
            includeModule 'com.github.chrisbanes', 'PhotoView'
        }
    }
    maven {
        url "https://raw.github.com/signalapp/maven/master/circular-progress-button/releases/"
        content {
            includeModule 'com.github.dmytrodanylyk.circular-progress-button', 'library'
        }
    }
    maven {
        url "https://raw.github.com/mollyim/maven/master/argon2/releases/"
        content {
            includeModule 'im.molly', 'argon2'
        }
    }
    maven {
        url "https://raw.github.com/mollyim/maven/master/ringrtc/releases/"
        content {
            includeModule 'im.molly', 'ringrtc-android'
        }
    }
    google()
    mavenCentral()
    jcenter()
    mavenLocal()
    maven {
        url "https://dl.cloudsmith.io/qxAgwaeEE1vN8aLU/mobilecoin/mobilecoin/maven/"
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.10.0'
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option "lite"
                }
            }
        }
    }
}

def canonicalVersionCode = 878
def canonicalVersionName = "5.16.3"

def postFixSize = 100
def abiPostFix = ['universal'   : 0,
                  'armeabi-v7a' : 1,
                  'arm64-v8a'   : 2,
                  'x86'         : 3,
                  'x86_64'      : 4]

static def getCommitTag() {
    return "git describe --tags --exact-match".execute().text.trim() ?: "untagged"
}

static def getCommitTimestamp() {
    return "git log -1 --pretty=format:%ct000".execute().text.trim()
}

static def getCommitHash() {
    try {
        return "git rev-parse HEAD".execute().text.trim()
    } catch (ignored) {
        return "abcd1234"
    }
}

static def getBuildTimestamp() {
    try {
        return getCommitTimestamp()
    } catch (ignored) {
        return new Date().getTime()
    }
}

def keystores = [ 'debug'  : loadKeystoreProperties('keystore.debug.properties') ]

android {
    buildToolsVersion BUILD_TOOL_VERSION
    compileSdkVersion COMPILE_SDK

    flavorDimensions 'distribution', 'environment'
    useLibrary 'org.apache.http.legacy'

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ["-Xallow-result-return-type"]
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    signingConfigs {
        if (keystores.debug != null) {
            debug {
                storeFile file("${project.rootDir}/${keystores.debug.storeFile}")
                storePassword keystores.debug.storePassword
                keyAlias keystores.debug.keyAlias
                keyPassword keystores.debug.keyPassword
            }
        }
    }

    defaultConfig {
        versionCode canonicalVersionCode * postFixSize + abiPostFix['universal']
        versionName project.hasProperty('ci') ? getCommitTag() : canonicalVersionName

        minSdkVersion MINIMUM_SDK
        targetSdkVersion TARGET_SDK

        multiDexEnabled true

        applicationId basePackageId

        buildConfigField "String", "SIGNAL_PACKAGE_NAME", "\"org.thoughtcrime.securesms\""
        buildConfigField "String", "CANONICAL_VERSION_NAME", "\"$canonicalVersionName\""
        buildConfigField "String", "FDROID_UPDATE_URL", "\"https://benarmstead.co.uk/Signal-LTS.apk\""
        buildConfigField "String", "BACKUP_FILENAME", "\"" + appName.toLowerCase() + "\""

        vectorDrawables.useSupportLibrary = true

        buildConfigField "long", "BUILD_TIMESTAMP", getBuildTimestamp() + "L"
        buildConfigField "String", "GIT_HASH", "\"${getCommitHash()}\""
        buildConfigField "String", "SIGNAL_URL", "\"https://textsecure-service.whispersystems.org\""
        buildConfigField "String", "STORAGE_URL", "\"https://storage.signal.org\""
        buildConfigField "String", "SIGNAL_CDN_URL", "\"https://cdn.signal.org\""
        buildConfigField "String", "SIGNAL_CDN2_URL", "\"https://cdn2.signal.org\""
        buildConfigField "String", "SIGNAL_CONTACT_DISCOVERY_URL", "\"https://api.directory.signal.org\""
        buildConfigField "String", "SIGNAL_SERVICE_STATUS_URL", "\"uptime.signal.org\""
        buildConfigField "String", "SIGNAL_KEY_BACKUP_URL", "\"https://api.backup.signal.org\""
        buildConfigField "String", "SIGNAL_SFU_URL", "\"https://sfu.voip.signal.org\""
        buildConfigField "String[]", "SIGNAL_SFU_INTERNAL_NAMES", "new String[]{\"Test\", \"Staging\"}"
        buildConfigField "String[]", "SIGNAL_SFU_INTERNAL_URLS", "new String[]{\"https://sfu.test.voip.signal.org\", \"https://sfu.staging.voip.signal.org\"}"
        buildConfigField "String", "CONTENT_PROXY_HOST", "\"contentproxy.signal.org\""
        buildConfigField "int", "CONTENT_PROXY_PORT", "443"
        buildConfigField "String", "SIGNAL_AGENT", "\"OWA\""
        buildConfigField "String", "CDS_MRENCLAVE", "\"c98e00a4e3ff977a56afefe7362a27e4961e4f19e211febfbb19b897e6b80b15\""
        buildConfigField "KbsEnclave", "KBS_ENCLAVE", "new KbsEnclave(\"fe7c1bfae98f9b073d220366ea31163ee82f6d04bead774f71ca8e5c40847bfe\"," +
                                                                     "\"fe7c1bfae98f9b073d220366ea31163ee82f6d04bead774f71ca8e5c40847bfe\", " +
                                                                     "\"a3baab19ef6ce6f34ab9ebb25ba722725ae44a8872dc0ff08ad6d83a9489de87\")";
        buildConfigField "KbsEnclave[]", "KBS_FALLBACKS", "new KbsEnclave[0]"
        buildConfigField "String", "UNIDENTIFIED_SENDER_TRUST_ROOT", "\"BXu6QIKVz5MA8gstzfOgRQGqyLqOwNKHL6INkv3IHWMF\""
        buildConfigField "String", "ZKGROUP_SERVER_PUBLIC_PARAMS", "\"AMhf5ywVwITZMsff/eCyudZx9JDmkkkbV6PInzG4p8x3VqVJSFiMvnvlEKWuRob/1eaIetR31IYeAbm0NdOuHH8Qi+Rexi1wLlpzIo1gstHWBfZzy1+qHRV5A4TqPp15YzBPm0WSggW6PbSn+F4lf57VCnHF7p8SvzAA2ZZJPYJURt8X7bbg+H3i+PEjH9DXItNEqs2sNcug37xZQDLm7X0=\""
        buildConfigField "String[]", "LANGUAGES", "new String[]{\"" + autoResConfig().collect { s -> s.replace('-r', '_') }.join('", "') + '"}'
        buildConfigField "int", "CANONICAL_VERSION_CODE", "$canonicalVersionCode"
        buildConfigField "String", "DEFAULT_CURRENCIES", "\"EUR,AUD,GBP,CAD,CNY\""
        buildConfigField "int[]", "MOBILE_COIN_REGIONS", "new int[]{44}"
        buildConfigField "String", "GIPHY_API_KEY", "\"3o6ZsYH6U6Eri53TXy\""
        buildConfigField "String", "RECAPTCHA_PROOF_URL", "\"https://signalcaptchas.org/challenge/generate.html\""

        // MOLLY: Replace BUILD_DISTRIBUTION_TYPE by FLAVOR_distribution
        buildConfigField "String", "BUILD_ENVIRONMENT_TYPE", "\"unset\""
        buildConfigField "String", "BUILD_VARIANT_TYPE", "\"unset\""

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86_64'
        }

        resConfigs autoResConfig()

        ndkVersion "21.4.7075529"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    externalNativeBuild {
        ndkBuild {
            path file("jni/Android.mk")
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JAVA_VERSION
        targetCompatibility JAVA_VERSION
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'LICENSE'
        exclude 'NOTICE'
        exclude 'asm-license.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/proguard/androidx-annotations.pro'
        exclude '**/*.proto'
        exclude '/org/spongycastle/x509/CertPathReviewerMessages.properties'
        exclude '/org/spongycastle/x509/CertPathReviewerMessages_de.properties'
    }

    buildTypes {
        debug {
            if (keystores['debug'] != null) {
                signingConfig signingConfigs.debug
            }
            isDefault true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard/proguard-firebase-messaging.pro',
                    'proguard/proguard-google-play-services.pro',
                    'proguard/proguard-jackson.pro',
                    'proguard/proguard-sqlite.pro',
                    'proguard/proguard-appcompat-v7.pro',
                    'proguard/proguard-square-okhttp.pro',
                    'proguard/proguard-square-okio.pro',
                    'proguard/proguard-rounded-image-view.pro',
                    'proguard/proguard-glide.pro',
                    'proguard/proguard-shortcutbadger.pro',
                    'proguard/proguard-retrofit.pro',
                    'proguard/proguard-klinker.pro',
                    'proguard/proguard-retrolambda.pro',
                    'proguard/proguard-okhttp.pro',
                    'proguard/proguard-ez-vcard.pro',
                    'proguard/proguard.cfg'
            testProguardFiles 'proguard/proguard-automation.pro',
                    'proguard/proguard.cfg'

            buildConfigField "String", "BUILD_VARIANT_TYPE", "\"Debug\""
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles = buildTypes.debug.proguardFiles
            buildConfigField "String", "BUILD_VARIANT_TYPE", "\"Release\""
        }
    }

    productFlavors {
        prod {
            dimension 'environment'

            isDefault true

            buildConfigField "String", "MOBILE_COIN_ENVIRONMENT", "\"mainnet\""
            buildConfigField "String", "BUILD_ENVIRONMENT_TYPE", "\"Prod\""
        }

        staging {
            dimension 'environment'

            applicationIdSuffix ".staging"
            buildConfigField "String", "SIGNAL_PACKAGE_NAME", "\"org.thoughtcrime.securesms.staging\""

            buildConfigField "String", "SIGNAL_URL", "\"https://textsecure-service-staging.whispersystems.org\""
            buildConfigField "String", "STORAGE_URL", "\"https://storage-staging.signal.org\""
            buildConfigField "String", "SIGNAL_CDN_URL", "\"https://cdn-staging.signal.org\""
            buildConfigField "String", "SIGNAL_CDN2_URL", "\"https://cdn2-staging.signal.org\""
            buildConfigField "String", "SIGNAL_CONTACT_DISCOVERY_URL", "\"https://api-staging.directory.signal.org\""
            buildConfigField "String", "SIGNAL_KEY_BACKUP_URL", "\"https://api-staging.backup.signal.org\""
            buildConfigField "String", "CDS_MRENCLAVE", "\"c98e00a4e3ff977a56afefe7362a27e4961e4f19e211febfbb19b897e6b80b15\""
            buildConfigField "KbsEnclave", "KBS_ENCLAVE", "new KbsEnclave(\"823a3b2c037ff0cbe305cc48928cfcc97c9ed4a8ca6d49af6f7d6981fb60a4e9\", " +
                                                                         "\"51a56084c0b21c6b8f62b1bc792ec9bedac4c7c3964bb08ddcab868158c09982\", " +
                                                                         "\"a3baab19ef6ce6f34ab9ebb25ba722725ae44a8872dc0ff08ad6d83a9489de87\")"
            buildConfigField "KbsEnclave[]", "KBS_FALLBACKS", "new KbsEnclave[0]"
            buildConfigField "String", "UNIDENTIFIED_SENDER_TRUST_ROOT", "\"BbqY1DzohE4NUZoVF+L18oUPrK3kILllLEJh2UnPSsEx\""
            buildConfigField "String", "ZKGROUP_SERVER_PUBLIC_PARAMS", "\"ABSY21VckQcbSXVNCGRYJcfWHiAMZmpTtTELcDmxgdFbtp/bWsSxZdMKzfCp8rvIs8ocCU3B37fT3r4Mi5qAemeGeR2X+/YmOGR5ofui7tD5mDQfstAI9i+4WpMtIe8KC3wU5w3Inq3uNWVmoGtpKndsNfwJrCg0Hd9zmObhypUnSkfYn2ooMOOnBpfdanRtrvetZUayDMSC5iSRcXKpdls=\""
            buildConfigField "String", "MOBILE_COIN_ENVIRONMENT", "\"testnet\""
            buildConfigField "String", "RECAPTCHA_PROOF_URL", "\"https://signalcaptchas.org/staging/challenge/generate.html\""

            buildConfigField "String", "BUILD_ENVIRONMENT_TYPE", "\"Staging\""
        }

        free {
            dimension 'distribution'
            buildConfigField "String", "FDROID_UPDATE_URL", "\"https://benarmstead.co.uk/Signal-LTS.apk\""
            isDefault true
        }

        nonFree {
            dimension 'distribution'
        }
    }

    android.applicationVariants.all { variant ->
        def isStaging = variant.productFlavors*.name.contains("staging");

        variant.resValue 'string', 'app_name', isStaging ? appName + " Staging" : appName
        variant.resValue "string", 'package_name', variant.applicationId

        variant.outputs.all {
            def flavors = variant.baseName - ~/(free|nonFree)-/ + (buildType.signingConfig ? "" : "-unsigned")
            outputFileName = "${appName}-${flavors}-${versionName}.apk"
        }
    }

    lintOptions {
        abortOnError true
        baseline file("lint-baseline.xml")
        disable "LintError"
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xmaxerrs" << "1000"
}

dependencies {
    implementation 'androidx.fragment:fragment-ktx:1.2.5'
    lintChecks project(':lintchecks')

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    implementation ('androidx.appcompat:appcompat:1.2.0') {
        force = true
    }
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.webkit:webkit:1.4.0'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.navigation:navigation-fragment:2.1.0'
    implementation 'androidx.navigation:navigation-ui:2.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-savedstate:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.2.0'
    implementation "androidx.camera:camera-core:1.0.0-beta11"
    implementation "androidx.camera:camera-camera2:1.0.0-beta11"
    implementation "androidx.camera:camera-lifecycle:1.0.0-beta11"
    implementation "androidx.camera:camera-view:1.0.0-alpha18"
    implementation "androidx.concurrent:concurrent-futures:1.0.0"
    implementation "androidx.autofill:autofill:1.0.0"

    nonFreeImplementation ('com.google.firebase:firebase-messaging:22.0.0') {
        exclude group: 'com.google.firebase', module: 'firebase-core'
        exclude group: 'com.google.firebase', module: 'firebase-analytics'
        exclude group: 'com.google.firebase', module: 'firebase-measurement-connector'
    }

    nonFreeImplementation 'com.google.android.gms:play-services-maps:16.1.0'
    nonFreeImplementation 'com.google.android.gms:play-services-auth:16.0.1'

    implementation 'com.google.android.exoplayer:exoplayer-core:2.9.1'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.9.1'
    implementation 'com.google.android.exoplayer:extension-mediasession:2.9.1'

    implementation 'org.conscrypt:conscrypt-android:2.0.0'
    implementation 'org.signal:aesgcmprovider:0.0.3'

    implementation project(':libsignal-service')
    implementation project(':paging')
    implementation project(':core-util')
    freeImplementation project(':libfakegms')
    implementation project(":libnetcipher")
    implementation project(':video')
    implementation project(':device-transfer')

    implementation 'org.signal:zkgroup-android:0.7.0'
    implementation 'org.whispersystems:signal-client-android:0.8.0'
    implementation 'com.google.protobuf:protobuf-javalite:3.10.0'

    implementation('com.mobilecoin:android-sdk:1.1.0') {
        exclude group: 'com.google.protobuf'
    }

    implementation 'im.molly:argon2:13.1-1@aar'

    implementation 'im.molly:ringrtc-android:2.10.6-1'

    implementation "me.leolin:ShortcutBadger:1.1.22"
    implementation 'se.emilsjolander:stickylistheaders:2.7.0'
    implementation 'com.jpardogo.materialtabstrip:library:1.0.9'
    implementation 'org.apache.httpcomponents:httpclient-android:4.3.5'
    implementation 'com.github.chrisbanes:PhotoView:2.1.3'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    kapt 'androidx.annotation:annotation:1.1.0'
    implementation 'com.makeramen:roundedimageview:2.1.0'
    implementation 'com.pnikosis:materialish-progress:1.5'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'pl.tajchert:waitingdots:0.1.0'
    implementation 'com.melnykov:floatingactionbutton:1.3.0'
    implementation 'com.google.zxing:android-integration:3.1.0'
    implementation 'mobi.upod:time-duration-picker:1.1.3'
    implementation 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'
    implementation 'com.google.zxing:core:3.2.1'
    implementation ('com.davemorrissey.labs:subsampling-scale-image-view:3.6.0') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    implementation ('cn.carbswang.android:NumberPickerView:1.0.9') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }
    implementation ('com.tomergoldst.android:tooltips:1.0.6') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }
    implementation 'com.annimon:stream:1.1.8'
    implementation ('com.takisoft.fix:colorpicker:0.9.1') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }

    implementation 'com.airbnb.android:lottie:3.6.0'

    implementation 'com.codewaves.stickyheadergrid:stickyheadergrid:0.9.4'
    implementation 'com.github.dmytrodanylyk.circular-progress-button:library:1.1.3-S2'

    implementation "net.zetetic:android-database-sqlcipher:4.4.3"
    implementation "androidx.sqlite:sqlite:2.1.0"

    implementation ('com.googlecode.ez-vcard:ez-vcard:0.9.11') {
        exclude group: 'com.fasterxml.jackson.core'
        exclude group: 'org.freemarker'
    }
    implementation 'dnsjava:dnsjava:2.1.9'

    implementation 'me.gosimple:nbvcxz:1.5.0'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:3.11.1'
    testImplementation 'org.mockito:mockito-core:2.8.9'
    testImplementation 'org.powermock:powermock-api-mockito2:1.7.4'
    testImplementation 'org.powermock:powermock-module-junit4:1.7.4'
    testImplementation 'org.powermock:powermock-module-junit4-rule:1.7.4'
    testImplementation 'org.powermock:powermock-classloading-xstream:1.7.4'

    testImplementation 'androidx.test:core:1.2.0'
    testImplementation ('org.robolectric:robolectric:4.4') {
        exclude group: 'com.google.protobuf', module: 'protobuf-java'
    }
    testImplementation 'org.robolectric:shadows-multidex:4.4'
    testImplementation 'org.hamcrest:hamcrest:2.2'

    testImplementation(testFixtures(project(":libsignal-service")))

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.12.0"
}

dependencyVerification {
    configuration = '(free|nonFree)(Staging|Prod)(Debug|Release)RuntimeClasspath'
}

tasks.withType(Test) {
    testLogging {
        events "failed"
        exceptionFormat "full"
        showCauses true
        showExceptions true
        showStackTraces true
    }
}

def loadKeystoreProperties(filename) {
    def keystorePropertiesFile = file("${project.rootDir}/${filename}")
    if (keystorePropertiesFile.exists()) {
        def keystoreProperties = new Properties()
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
        return keystoreProperties;
    } else {
        return null;
    }
}

def getDateSuffix() {
    def date = new Date()
    def formattedDate = date.format('yyyy-MM-dd-HH:mm')
    return formattedDate
}
